service: serverless-express-apollo

provider:
  name: aws
  runtime: nodejs20.x
  region: ${env:MY_AWS_REGION}  # Reference environment variables using ${env:VAR_NAME}
  environment:
    MONGODB_URI: ${env:MONGODB_URI}
    MY_AWS_PROFILE: ${env:MY_AWS_PROFILE}
    BUCKET: ${env:BUCKET}
functions:
  graphql:
    handler: server/server.graphqlHandler
    events:
      - http:
          path: graphql
          method: any
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false
      - http:
          path: playground
          method: ANY
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false
  singlePostImage:
    handler: server/server.singlePostImageHandler
    events:
      - http:
          path: singlepost-image
          method: get
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false

  createS3Folder:
    handler: server/server.createS3FolderHandler
    events:
      - http:
          path: create-s3-folder
          method: post
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false

  upload:
    handler: server/server.uploadHandler
    events:
      - http:
          path: upload
          method: post
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false

  getUserFolders:
    handler: server/server.getUserFoldersHandler
    events:
      - http:
          path: user-folders
          method: get
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false

  getImages:
    handler: server/server.getImagesHandler
    events:
      - http:
          path: images
          method: get
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false

  getAudioFiles:
    handler: server/server.getAudioFilesHandler
    events:
      - http:
          path: audiofiles
          method: get
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false

  getFiles:
    handler: server/server.getFilesHandler
    events:
      - http:
          path: files
          method: get
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false
  uploadImage:
    handler: server/server.uploadImageHandler
    timeout: 30 
    events:
      - http:
          path: upload-image
          method: post
          cors:
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false

  uploadAudio:
    handler: server/server.uploadAudioHandler
    timeout: 30 
    events:
      - http:
          path: upload-audio
          method: post
          cors: 
            origins:
              - 'https://main.dan6kz7trfabu.amplifyapp.com'
              - 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
              - x-user-id
              - x-file-type
              - x-project-author
            allowCredentials: false

plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-apigw-binary
  - dotenv
custom:
  apigwBinary:
    types:
      - 'image/jpeg'
      - 'image/png'
      - 'audio/wav'
      - 'audio/mpeg'
      - 'multipart/form-data'
  serverless-offline:
    httpPort: 4001
  prune:
    automatic: true
    number: 3

package:
  exclude:
    - client/** 
    - package-lock.json
    - node_modules/**
  excludeDevDependencies: true
