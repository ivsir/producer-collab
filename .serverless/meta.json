{
  "/Users/risvitareq/code/producer-collab": {
    "versionSfCore": null,
    "versionFramework": "4.0.35",
    "isWithinCompose": false,
    "composeOrgName": null,
    "servicePath": "/Users/risvitareq/code/producer-collab",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "serverless-express-apollo",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "environment": {
          "MONGODB_URI": "mongodb+srv://ivsir:Ulang1411!@producer-collab.dyoeqvd.mongodb.net/?retryWrites=true&w=majority&appName=producer-collab",
          "MY_AWS_PROFILE": "ivsir-general",
          "MY_AWS_REGION": "us-west-1",
          "BUCKET": "react-image-upload-ivsir"
        },
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "app": {
          "handler": "server/server.handler",
          "events": [
            {
              "http": {
                "path": "create-s3-folder",
                "method": "post"
              }
            },
            {
              "http": {
                "path": "user-folders",
                "method": "get"
              }
            },
            {
              "http": {
                "path": "images",
                "method": "post"
              }
            },
            {
              "http": {
                "path": "audiofiles",
                "method": "post"
              }
            },
            {
              "http": {
                "path": "upload",
                "method": "post"
              }
            },
            {
              "http": {
                "path": "images",
                "method": "get"
              }
            },
            {
              "http": {
                "path": "audiofiles",
                "method": "get"
              }
            },
            {
              "http": {
                "path": "singlepost-image",
                "method": "get"
              }
            },
            {
              "http": {
                "path": "files",
                "method": "get"
              }
            },
            {
              "http": {
                "path": "graphql",
                "method": "any"
              }
            }
          ],
          "name": "serverless-express-apollo-dev-app"
        }
      },
      "plugins": [
        "serverless-offline",
        "serverless-prune-plugin"
      ],
      "custom": {
        "serverless-offline": {
          "httpPort": 4001
        },
        "prune": {
          "automatic": true,
          "number": 3
        }
      },
      "package": {
        "exclude": [
          "client/**",
          "package-lock.json",
          "node_modules/**"
        ],
        "excludeDevDependencies": true
      }
    },
    "serviceRawFile": "service: serverless-express-apollo\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  region: us-east-1\n  environment:\n    MONGODB_URI: mongodb+srv://ivsir:Ulang1411!@producer-collab.dyoeqvd.mongodb.net/?retryWrites=true&w=majority&appName=producer-collab\n    MY_AWS_PROFILE: ivsir-general\n    MY_AWS_REGION: us-west-1\n    BUCKET: react-image-upload-ivsir\n\nfunctions:\n  app:\n    handler: server/server.handler\n    events:\n      - http:\n          path: create-s3-folder\n          method: post\n      - http:\n          path: user-folders\n          method: get\n      - http:\n          path: images\n          method: post\n      - http:\n          path: audiofiles\n          method: post\n      - http:\n          path: upload\n          method: post\n      - http:\n          path: images\n          method: get\n      - http:\n          path: audiofiles\n          method: get\n      - http:\n          path: singlepost-image\n          method: get\n      - http:\n          path: files\n          method: get\n      - http:\n          path: graphql\n          method: any\n\nplugins:\n  - serverless-offline\n  # - serverless-dotenv-plugin\n  - serverless-prune-plugin\n\ncustom:\n  serverless-offline:\n    httpPort: 4001\n  # dotenv:\n  #   path: ./server/.env\n  prune:\n    automatic: true\n    number: 3\n\npackage:\n  exclude:\n    - client/** \n    - package-lock.json\n    - node_modules/**\n  excludeDevDependencies: true\n",
    "command": [
      "offline"
    ],
    "options": {},
    "error": {
      "message": "EACCES: permission denied, mkdir '/Users/risvitareq/.serverless/artifacts/ajv-validate-05-06-2024'",
      "stack": "Error: EACCES: permission denied, mkdir '/Users/risvitareq/.serverless/artifacts/ajv-validate-05-06-2024'",
      "code": "EACCES"
    },
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "031ce66e-846a-4177-9803-7027e5d26c87",
    "orgName": "producercollab",
    "userId": "Y2DkMTBGVXz0HjQ6bv",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "producercollab",
    "subscription": null,
    "userEmail": "ivsirqerat@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "614288690243",
    "versionSf": "4.0.35",
    "serviceProviderAwsCfStackName": "serverless-express-apollo-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:614288690243:stack/serverless-express-apollo-dev/a73a55d0-229e-11ef-8669-120b3274691f",
    "serviceProviderAwsCfStackCreated": "2024-06-04T18:17:07.845Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-05T05:08:03.627Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "AppLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:614288690243:function:serverless-express-apollo-dev-app:13",
        "Description": "Current Lambda function version",
        "ExportName": "sls-serverless-express-apollo-dev-AppLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://17yjc57zyk.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-serverless-express-apollo-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-express-apollo-serverlessdeploymentbuck-7gewbzrgdmy1",
        "ExportName": "sls-serverless-express-apollo-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}