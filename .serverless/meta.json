{
  "/Users/risvitareq/code/producer-collab": {
    "versionSfCore": null,
    "versionFramework": "4.0.38",
    "isWithinCompose": false,
    "composeOrgName": null,
    "servicePath": "/Users/risvitareq/code/producer-collab",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "serverless-express-apollo",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "httpApi": {
          "cors": {
            "allowedOrigins": [
              "*"
            ],
            "allowedHeaders": [
              "Content-Type",
              "Authorization",
              "x-user-id",
              "x-file-type",
              "x-project-author"
            ],
            "allowedMethods": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "OPTIONS"
            ]
          }
        },
        "environment": {
          "MONGODB_URI": "mongodb+srv://ivsir:Ulang1411!@producer-collab.dyoeqvd.mongodb.net/?retryWrites=true&w=majority&appName=producer-collab",
          "MY_AWS_PROFILE": "ivsir-general",
          "MY_AWS_REGION": "us-west-1",
          "BUCKET": "react-image-upload-ivsir"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "s3:PutObject",
              "s3:GetObject",
              "s3:ListBucket"
            ],
            "Resource": [
              "arn:aws:s3:::react-image-upload-ivsir/*",
              "arn:aws:s3:::react-image-upload-ivsir"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "sts:AssumeRole"
            ],
            "Resource": "arn:aws:iam::614288690243:user/ivsir"
          }
        ],
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "app": {
          "handler": "server/server.graphqlHandler",
          "events": [
            {
              "http": {
                "path": "graphql",
                "method": "any",
                "cors": true
              }
            },
            {
              "http": {
                "path": "playground",
                "method": "ANY",
                "cors": true
              }
            }
          ],
          "name": "serverless-express-apollo-dev-app"
        },
        "restApiHandler": {
          "handler": "server/server.restHandler",
          "events": [
            {
              "httpApi": {
                "path": "/{proxy+}",
                "method": "ANY"
              }
            }
          ],
          "name": "serverless-express-apollo-dev-restApiHandler"
        },
        "getSinglePostImage": {
          "handler": "server/server.getSinglePostImage",
          "events": [
            {
              "http": {
                "path": "singlepost-image",
                "method": "GET",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "x-user-id",
                    "x-file-type",
                    "x-project-author"
                  ],
                  "methods": [
                    "GET",
                    "OPTIONS"
                  ]
                }
              }
            }
          ],
          "name": "serverless-express-apollo-dev-getSinglePostImage"
        }
      },
      "plugins": [
        "serverless-offline",
        "serverless-prune-plugin"
      ],
      "custom": {
        "serverless-offline": {
          "httpPort": 4001
        },
        "prune": {
          "automatic": true,
          "number": 3
        }
      },
      "package": {
        "exclude": [
          "client/**",
          "package-lock.json",
          "node_modules/**"
        ],
        "excludeDevDependencies": true
      }
    },
    "serviceRawFile": "service: serverless-express-apollo\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  region: us-east-1\n  httpApi:\n    cors:\n      allowedOrigins:\n        - '*'\n      allowedHeaders:\n        - Content-Type\n        - Authorization\n        - x-user-id\n        - x-file-type\n        - x-project-author\n      allowedMethods:\n        - GET\n        - POST\n        - PUT\n        - DELETE\n        - OPTIONS\n  environment:\n    MONGODB_URI: mongodb+srv://ivsir:Ulang1411!@producer-collab.dyoeqvd.mongodb.net/?retryWrites=true&w=majority&appName=producer-collab\n    MY_AWS_PROFILE: ivsir-general\n    MY_AWS_REGION: us-west-1\n    BUCKET: react-image-upload-ivsir\n\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - s3:PutObject\n        - s3:GetObject\n        - s3:ListBucket\n      Resource:\n        - \"arn:aws:s3:::react-image-upload-ivsir/*\"\n        - \"arn:aws:s3:::react-image-upload-ivsir\"\n    - Effect: Allow\n      Action:\n        - sts:AssumeRole\n      Resource: \"arn:aws:iam::614288690243:user/ivsir\"\n\nfunctions:\n  app:\n    handler: server/server.graphqlHandler\n    events:\n      - http:\n          path: graphql\n          method: any\n          cors: true\n      - http:\n          path: playground\n          method: ANY\n          cors: true\n  restApiHandler:\n    handler: server/server.restHandler\n    events:\n      - httpApi:\n          path: /{proxy+}\n          method: ANY\n  getSinglePostImage:\n    handler: server/server.getSinglePostImage\n    events:\n      - http:\n          path: singlepost-image\n          method: GET\n          cors:\n            origin: '*'\n            headers:\n              - Content-Type\n              - Authorization\n              - x-user-id\n              - x-file-type\n              - x-project-author\n            methods:\n              - GET\n              - OPTIONS        \n\nplugins:\n  - serverless-offline\n  - serverless-prune-plugin\n\ncustom:\n  serverless-offline:\n    httpPort: 4001\n  prune:\n    automatic: true\n    number: 3\n\npackage:\n  exclude:\n    - client/** \n    - package-lock.json\n    - node_modules/**\n  excludeDevDependencies: true\n",
    "command": [
      "offline"
    ],
    "options": {},
    "error": {
      "message": "EACCES: permission denied, mkdir '/Users/risvitareq/.serverless/artifacts/ajv-validate-07-06-2024'",
      "stack": "Error: EACCES: permission denied, mkdir '/Users/risvitareq/.serverless/artifacts/ajv-validate-07-06-2024'",
      "code": "EACCES"
    },
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "031ce66e-846a-4177-9803-7027e5d26c87",
    "orgName": "producercollab",
    "userId": "Y2DkMTBGVXz0HjQ6bv",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "producercollab",
    "subscription": null,
    "userEmail": "ivsirqerat@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "614288690243",
    "versionSf": "4.0.38",
    "serviceProviderAwsCfStackName": "serverless-express-apollo-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:614288690243:stack/serverless-express-apollo-dev/a73a55d0-229e-11ef-8669-120b3274691f",
    "serviceProviderAwsCfStackCreated": "2024-06-04T18:17:07.845Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-07T04:55:34.672Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "RestApiHandlerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:614288690243:function:serverless-express-apollo-dev-restApiHandler:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-serverless-express-apollo-dev-RestApiHandlerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetSinglePostImageLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:614288690243:function:serverless-express-apollo-dev-getSinglePostImage:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-serverless-express-apollo-dev-GetSinglePostImageLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AppLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:614288690243:function:serverless-express-apollo-dev-app:33",
        "Description": "Current Lambda function version",
        "ExportName": "sls-serverless-express-apollo-dev-AppLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "5wgel7uoui",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-serverless-express-apollo-dev-HttpApiId"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://17yjc57zyk.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-serverless-express-apollo-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-express-apollo-serverlessdeploymentbuck-7gewbzrgdmy1",
        "ExportName": "sls-serverless-express-apollo-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://5wgel7uoui.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-serverless-express-apollo-dev-HttpApiUrl"
      }
    ]
  }
}